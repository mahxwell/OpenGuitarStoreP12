{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/accountmanagement/accountmanagement.component.ts","webpack:///src/app/accountmanagement/accountmanagement.component.html","webpack:///src/app/accountmanagement/accountmodify/accountmodify.component.ts","webpack:///src/app/accountmanagement/accountmodify/accountmodify.component.html","webpack:///src/app/accountmanagement/generalmsg/generalmsg.component.ts","webpack:///src/app/accountmanagement/generalmsg/generalmsg.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/guitar/addreview/addreview.component.ts","webpack:///src/app/guitar/addreview/addreview.component.html","webpack:///src/app/guitar/guitar.component.ts","webpack:///src/app/guitar/guitar.component.html","webpack:///src/app/guitars/guitars.component.ts","webpack:///src/app/guitars/guitars.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/search/search.component.ts","webpack:///src/app/header/search/search.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/Guitarmodel.model.ts","webpack:///src/app/models/Review.model.ts","webpack:///src/app/models/User.model.ts","webpack:///src/app/order/addorder/addorder.component.ts","webpack:///src/app/order/addorder/addorder.component.html","webpack:///src/app/order/listorder/listorder.component.ts","webpack:///src/app/order/listorder/listorder.component.html","webpack:///src/app/order/order.component.ts","webpack:///src/app/reservation/addreservation/addreservation.component.ts","webpack:///src/app/reservation/addreservation/addreservation.component.html","webpack:///src/app/reservation/listreservation/listreservation.component.ts","webpack:///src/app/reservation/listreservation/listreservation.component.html","webpack:///src/app/reservation/reservation.component.ts","webpack:///src/app/reservation/reservation.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/guitars.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/reservation.service.ts","webpack:///src/app/services/review.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/user/register/register.component.ts","webpack:///src/app/user/register/register.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountmanagementComponent","authenticationService","orderService","http","router","orderUrl","orderSubject","userid","Number","sessionStorage","getItem","get","String","subscribe","response","orders","emitOrder","error","console","log","deleteUser","navigate","next","slice","selector","templateUrl","styleUrls","AccountmodifyComponent","formBuilder","newsletterbool","initForm","updateForm","group","name","surname","pseudo","mail","password","newsletter","formValue","value","newUser","updateUser","removeItem","GeneralmsgComponent","AppComponent","title","appRoutes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","FooterComponent","AddreviewComponent","reviewService","reviewForm","reviewcomment","reviewnote","date","Date","reviewdate","toDateString","reviewcostumername","guitaridguitar","costumeridcostumer","newReview","addReview","saveReview","GuitarComponent","guitarService","route","reviews","reviewSubscription","reviewSubject","emitReview","params","pipe","getOneGuitar","guitar","getReview","guitarid","userConnected","setItem","getReviewsByGuitarId","GuitarsComponent","guitars","guitarSubscription","guitarSubject","emitGuitar","getGuitars","HeaderComponent","session","isUserLoggedIn","userPseudo","userpseudo","searchForm","searchbox","searchGuitar","logOut","search","SearchComponent","LoginComponent","signinForm","mail1","password1","authentication","authLog","Guitarmodel","guitarmodelid","Review","User","AddorderComponent","addNewOrder","addOrder","modelDelete","deleteModel","ListorderComponent","orderId","guitaridToStr","newGuitarmodel","deleteOrder","addModel","OrderComponent","AddreservationComponent","reservationService","addNewReservation","addReservation","ListreservationComponent","reservationUrl","reservationSubject","reservations","emitReservation","reservationid","deleteReservation","ReservationComponent","AuthenticationService","userUrl","user","post","userToModify","put","delete","test","window","alert","providedIn","GuitarsService","searchGuitars","guitarUrl","str","OrderService","orderid","guitarmodel","ReservationService","ReviewService","reviewUrl","review","UserService","users","forumUrl","userSubject","emitUser","RegisterComponent","signupForm","addUser","saveUser","UserComponent","userService","userSubscription","getUser","WelcomeComponent","welcomeUrl","onViewGuitar","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Order} from '../models/Order.model';\nimport {OrderService} from '../services/order.service';\nimport {HttpClient} from '@angular/common/http';\nimport {Subject} from 'rxjs';\n\n@Component({\n  selector: 'app-accountmanagement',\n  templateUrl: './accountmanagement.component.html',\n  styleUrls: ['./accountmanagement.component.css']\n})\nexport class AccountmanagementComponent implements OnInit {\n  orders: Order[];\n  // private orderUrl = 'http://localhost:9005/';\n  private orderUrl = 'http://localhost:9004/order/';\n  orderSubject = new Subject<any[]>();\n\n  constructor(private authenticationService: AuthenticationService,\n              private orderService: OrderService,\n              private http: HttpClient,\n              private router: Router) {\n    const userid = Number(sessionStorage.getItem('id'));\n    this.http.get<Order[]>(this.orderUrl + '/orders/' + String(userid))\n      .subscribe(\n        (response) => {\n          this.orders = response;\n          this.emitOrder();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  deleteUserAccount() {\n    this.authenticationService.deleteUser();\n    this.router.navigate(['generalmsg']);\n  }\n\n  emitOrder() {\n    this.orderSubject.next(this.orders.slice());\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div id=\"mainwrapper\">\n  <div id=\"content\">\n    <section id=\"mainContent\" align=\"center\">\n      <h2>Gestion du Compte</h2>\n      <br/>\n      <br/>\n      <a class=\"nav-link\" href=\"listorder\" style=\"color: forestgreen\">Voir les commandes en cours</a>\n      <br/>\n      <br/>\n      <a class=\"nav-link\" href=\"listreservation\" style=\"color: forestgreen\">Voir les reservations en cours</a>\n      <br/>\n      <br/>\n      <a class=\"nav-link\" href=\"accountmodify\" style=\"color: red\">Modifier mon compte</a>\n      <br/>\n      <br/>\n      <div *ngIf=\"orders.length<=0\">\n        <a class=\"nav-link\" href=\"\" style=\"color: red\" (click)=\"deleteUserAccount()\">Supprimer mon compte</a>\n      </div>\n      <div *ngIf=\"orders.length>0\">\n        <p style=\"color: red\"> Vous ne pouvez pas supprimer votre compte si vous avez des commandes en cours !</p>\n      </div>\n      <br/>\n      <br/>\n    </section>\n  </div>\n  <div id=\"footerbar\">\n  </div>\n</div>\n</body>\n</html>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {Router} from '@angular/router';\nimport {User} from '../../models/User.model';\n\n@Component({\n  selector: 'app-accountmodify',\n  templateUrl: './accountmodify.component.html',\n  styleUrls: ['./accountmodify.component.css']\n})\nexport class AccountmodifyComponent implements OnInit {\n\n  updateForm: FormGroup;\n  newsletterbool: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private router: Router) {\n    this.newsletterbool = false;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.updateForm = this.formBuilder.group({\n      name: '',\n      surname: '',\n      pseudo: '',\n      mail: '',\n      password: '',\n      newsletter: ''\n    });\n  }\n\n  updateUser() {\n    const formValue = this.updateForm.value;\n    const id = Number(sessionStorage.getItem('id'));\n    const name = 'name';\n    const surname = 'surname';\n    const pseudo = 'pseudo';\n    const mail = 'mail';\n    const password = 'password';\n\n    const newUser = new User(\n      id,\n      formValue[name],\n      formValue[surname],\n      formValue[pseudo],\n      formValue[mail],\n      formValue[password],\n      this.newsletterbool);\n\n    this.authenticationService.updateUser(newUser);\n    sessionStorage.removeItem(('id'));\n    sessionStorage.removeItem('mail');\n    sessionStorage.removeItem('pseudo');\n    this.router.navigate(['generalmsg']);\n  }\n\n}\n","<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div class=\"row\">\n  <div class=\"col-lg-3\">\n  </div>\n  <div class=\"col-lg-6\">\n    <br/>\n    <br/>\n    <br/>\n    <div class=\"nes-container is-rounded\">\n      <h2 align=\"center\">Modifier votre compte</h2>\n      <br/>\n      <h3 align=\"center\">Vos Nouveau Identifiants</h3>\n      <br/>\n      <br/>\n      <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateUser()\">\n        <div class=\"form-group\" align=\"center\">\n\n          <label for=\"name\"></label>\n          <input type=\"text\"\n                 id=\"name\"\n                 class=\"nes-textarea\"\n                 formControlName=\"name\" placeholder=\"Entrez votre Nom\" required=\"required\">\n          <br/>\n          <label for=\"surname\"></label>\n          <input type=\"text\"\n                 id=\"surname\"\n                 class=\"nes-textarea\"\n                 formControlName=\"surname\" placeholder=\"Entrez votre Prénom\" required=\"required\">\n          <br/>\n          <label for=\"pseudo\"></label>\n          <input type=\"text\"\n                 id=\"pseudo\"\n                 class=\"nes-textarea\"\n                 formControlName=\"pseudo\" placeholder=\"Entrez votre Pseudo\" required=\"required\">\n          <br/>\n          <label for=\"mail\"></label>\n          <input type=\"text\"\n                 id=\"mail\"\n                 class=\"nes-textarea\"\n                 formControlName=\"mail\" placeholder=\"Entrez votre Email\" required=\"required\">\n          <br/>\n          <label for=\"password\"></label>\n          <input type=\"password\"\n                 id=\"password\"\n                 class=\"nes-textarea\"\n                 formControlName=\"password\" placeholder=\"Entrez votre Password\" required=\"required\">\n          <br/>\n          <br/>\n          <input type=\"checkbox\" id=\"newsletter\" name=\"newsletter\"  formControlName=\"newsletter\" [(ngModel)]=\"newsletterbool\">\n          <label for=\"newsletter\">Abonnement Newsletter</label>\n\n          <br/>\n          <br/>\n          <button class=\"btn btn-success\"\n                  type=\"submit\"\n                  [disabled]=\"updateForm.invalid\">Modifier mon compte\n          </button>\n          <br/>\n          <br/>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-lg-3\">\n  </div>\n</div>\n<br/>\n<br/>\n<br/>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-generalmsg',\n  templateUrl: './generalmsg.component.html',\n  styleUrls: ['./generalmsg.component.css']\n})\nexport class GeneralmsgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div align=\"center\">\n  <h3>Vous allez être déconnecté</h3>\n  <br>\n  <br>\n  <a class=\"nav-link\" href=\"welcome\" style=\"text-decoration: none; color: red\">Continuer</a>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n</div>\n</body>\n</html>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientUIOpenGuitarStore';\n}\n","<html>\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n</html>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {UserComponent} from './user/user.component';\r\nimport {UserService} from './services/user.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {WelcomeComponent} from './welcome/welcome.component';\r\nimport {GuitarComponent} from './guitar/guitar.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {GuitarsComponent} from './guitars/guitars.component';\r\nimport {GuitarsService} from './services/guitars.service';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AuthenticationService} from './services/authentication.service';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './user/register/register.component';\r\nimport {AccountmanagementComponent} from './accountmanagement/accountmanagement.component';\r\nimport {AddreviewComponent} from './guitar/addreview/addreview.component';\r\nimport {AccountmodifyComponent} from './accountmanagement/accountmodify/accountmodify.component';\r\nimport {GeneralmsgComponent} from './accountmanagement/generalmsg/generalmsg.component';\r\nimport {SearchComponent} from './header/search/search.component';\r\nimport {OrderComponent} from './order/order.component';\r\nimport {AddorderComponent} from './order/addorder/addorder.component';\r\nimport {ListorderComponent} from './order/listorder/listorder.component';\r\nimport {ReservationService} from './services/reservation.service';\r\nimport {OrderService} from './services/order.service';\r\nimport {ReviewService} from './services/review.service';\r\nimport { ReservationComponent } from './reservation/reservation.component';\r\nimport { AddreservationComponent } from './reservation/addreservation/addreservation.component';\r\nimport { ListreservationComponent } from './reservation/listreservation/listreservation.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: 'welcome', component: WelcomeComponent},\r\n  {path: '', redirectTo: 'welcome', pathMatch: 'full'},\r\n  {path: 'guitars', component: GuitarsComponent},\r\n  {path: 'guitars/:id', component: GuitarComponent},\r\n  {path: 'users', component: UserComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'accountmanagement', component: AccountmanagementComponent},\r\n  {path: 'accountmodify', component: AccountmodifyComponent},\r\n  {path: 'generalmsg', component: GeneralmsgComponent},\r\n  {path: 'addreviews', component: AddreviewComponent},\r\n  {path: 'search', component: SearchComponent},\r\n  {path: 'addorder', component: AddorderComponent},\r\n  {path: 'listorder', component: ListorderComponent},\r\n  {path: 'addreservation', component: AddreservationComponent},\r\n  {path: 'listreservation', component: ListreservationComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    WelcomeComponent,\r\n    GuitarComponent,\r\n    GuitarsComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AccountmanagementComponent,\r\n    AddreviewComponent,\r\n    AccountmodifyComponent,\r\n    GeneralmsgComponent,\r\n    SearchComponent,\r\n    OrderComponent,\r\n    AddorderComponent,\r\n    ListorderComponent,\r\n    ReservationComponent,\r\n    AddreservationComponent,\r\n    ListreservationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [UserService, GuitarsService, AuthenticationService, ReservationService, OrderService, ReviewService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container text-white bg-dark p-4\">\n  <div class=\"row\">\n    <div class=\"col-6 col-md-8 col-lg-7\">\n      <div class=\"row text-center\">\n        <div class=\"col-sm-6 col-md-4 col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li class=\"btn-link\"><a href=\"https://www.gibson.com/\" style=\"color: forestgreen\">Gibson Guitars</a></li>\n            <li class=\"btn-link\"><a style=\"color: forestgreen\" href=\"https://www.fender.com/\">Fender Guitars</a></li>\n            <li class=\"btn-link\"><a style=\"color: forestgreen\" href=\"https://www.gretsch.com/\">Gretsch Guitars</a></li>\n            <li class=\"btn-link\"><a style=\"color: forestgreen\" href=\"https://www.voxamps.com/\">Vox Amps</a></li>\n            <li class=\"btn-link\"><a style=\"color: forestgreen\" href=\"https://www.marshall.com/\">Marshall Amps</a></li>\n            <li class=\"btn-link\"><a style=\"color: forestgreen\" href=\"https://www.mesaboogie.com/\">Mesa Boogie Amps</a></li>\n          </ul>\n        </div>\n\n      </div>\n    </div>\n    <div class=\"col-md-4 col-lg-5 col-6\">\n      <address>\n        <strong>OpenGuitarStore, Inc.</strong><br>\n        781, Rue de Mediators<br>\n        75 007 Paris FRANCE<br>\n        <abbr title=\"Phone\">Tel:</abbr> 01 02 03 04 05\n      </address>\n      <address>\n        <a href=\"mailto:#\" style=\"color: forestgreen\">openguitarstore@gmail.com</a>\n      </address>\n    </div>\n  </div>\n</div>\n<hr>\n<footer class=\"text-center\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p>Copyright © OpenGuitarStore All rights reserved.</p>\n      </div>\n    </div>\n  </div>\n</footer>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ReviewService} from '../../services/review.service';\nimport {Router} from '@angular/router';\nimport {Review} from '../../models/Review.model';\n\n@Component({\n  selector: 'app-addreview',\n  templateUrl: './addreview.component.html',\n  styleUrls: ['./addreview.component.css']\n})\nexport class AddreviewComponent implements OnInit {\n\n  reviewForm: FormGroup;\n  date: Date;\n\n  constructor(private formBuilder: FormBuilder,\n              private reviewService: ReviewService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.reviewForm = this.formBuilder.group({\n      reviewcomment: '',\n      reviewnote: ''\n    });\n  }\n\n  saveReview() {\n    this.date = new Date();\n    const formValue = this.reviewForm.value;\n    const reviewdate = this.date.toDateString();\n    const reviewcomment = 'reviewcomment';\n    const reviewnote = 'reviewnote';\n\n    const reviewcostumername = sessionStorage.getItem('pseudo');\n    const guitaridguitar = Number(sessionStorage.getItem('guitarid'));\n    const costumeridcostumer = Number(sessionStorage.getItem('id'));\n\n    const newReview = new Review(\n      reviewdate,\n      formValue[reviewcomment],\n      formValue[reviewnote],\n      reviewcostumername,\n      guitaridguitar,\n      costumeridcostumer\n    );\n\n    this.reviewService.addReview(newReview);\n    this.router.navigate(['/welcome']);\n  }\n}\n","<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<form [formGroup]=\"reviewForm\" (ngSubmit)=\"saveReview()\">\n  <div class=\"form-group\" align=\"center\">\n\n    <h2 align=\"center\">Laissez Vos Avis sur Nos Guitares</h2>\n    <br/>\n    <br/>\n    <label for=\"reviewcomment\"></label>\n    <textarea type=\"text\"\n              id=\"reviewcomment\"\n              class=\"nes-textarea\"\n              formControlName=\"reviewcomment\" placeholder=\"Laisser un commentaire\" required=\"required\" style=\"width:400px\">\n    </textarea>\n    <br/>\n    <br/>\n    <br/>\n    <h2> Votre Note sur 10</h2>\n    <br/>\n    <label for=\"reviewnote\"></label>\n    <input type=\"number\"\n           id=\"reviewnote\"\n           formControlName=\"reviewnote\" placeholder=\"Note\" required=\"required\" min=\"0\" max=\"10\" size=\"25\"\n           onKeyDown=\"return false\">/10\n    <br/>\n    <br/>\n    <button class=\"btn btn-success\"\n            type=\"submit\"\n            [disabled]=\"reviewForm.invalid\">Validez votre Avis\n    </button>\n    <br/>\n    <br/>\n  </div>\n</form>\n</body>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {GuitarsService} from '../services/guitars.service';\nimport {Guitar} from '../models/Guitar.model';\nimport {switchMap} from 'rxjs/operators';\nimport {ReviewService} from '../services/review.service';\nimport {Review} from '../models/Review.model';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-guitar',\n  templateUrl: './guitar.component.html',\n  styleUrls: ['./guitar.component.css']\n})\nexport class GuitarComponent implements OnInit {\n\n  guitar: Guitar;\n  reviews: Review[] = [];\n  reviewSubscription: Subscription;\n  userConnected: boolean;\n\n  constructor(private guitarService: GuitarsService,\n              private route: ActivatedRoute,\n              private reviewService: ReviewService) {\n    this.reviewSubscription = this.reviewService.reviewSubject.subscribe(\n      (reviews: Review[]) => {\n        this.reviews = reviews;\n      }\n    );\n    this.reviewService.emitReview();\n  }\n\n  ngOnInit(): void {\n    const id = 'id';\n    this.route.params.pipe(switchMap((params: Params) =>\n      this.guitarService.getOneGuitar(+params[id])))\n      .subscribe((guitar: Guitar) => {\n        this.guitar = guitar;\n        this.getReview(this.guitar.guitarid);\n      });\n    if (sessionStorage.getItem('id') != null) {\n      this.userConnected = true;\n    } else {\n      this.userConnected = false;\n    }\n    sessionStorage.setItem('guitarid', String(this.guitar.guitarid));\n  }\n\n  getReview(guitaridguitar: number) {\n    this.reviewService.getReviewsByGuitarId(guitaridguitar);\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<br>\n<h2 class=\"text-center\">LES GUITARES</h2>\n<hr>\n<div class=\"container\" align=\"left\">\n  <div class=\"col-md-4 pb-1 pb-md-0\">\n    <div class=\"card\" align=\"left\">\n      <table style=\"border:100px; padding:100px; margin:0px; width: 1000px\">\n        <tr>\n          <td style=\"width: 500px\"><img class=\"card-img-top\" src=\"{{guitar.guitarimageurl}}\" alt=\"Card image cap\"></td>\n          <td><p align=\"center\">Modèle : {{guitar.guitarname}}</p>\n            <p align=\"center\">Fabriquant : {{guitar.guitarbrand}}</p>\n            <p align=\"center\">Année du Modèle : {{guitar.guitaryear}}</p>\n            <p align=\"center\" *ngIf=\"guitar.stock!='0'\">Disponibilité : <span\n              style=\"color: forestgreen\">{{guitar.stock}}</span></p>\n            <p align=\"center\" *ngIf=\"guitar.stock=='0'\">Disponibilité : <span style=\"color:red;\">Epuisée</span></p>\n            <p align=\"center\">Prix : <span style=\"color: forestgreen\">{{guitar.guitarprice}}</span></p>\n            <a class=\"nav-link\" href=\"addreviews\" align=\"center\" *ngIf=\"userConnected==true\">Donnez votre avis</a>\n            <a class=\"nav-link\" href=\"addorder\" align=\"center\" style=\"color: red\"\n               *ngIf=\"userConnected==true&&guitar.stock!='0'\">Acheter</a>\n            <a class=\"nav-link\" href=\"addreservation\" align=\"center\" *ngIf=\"userConnected==true && guitar.stock=='0'\">\n              <span style=\"color:red;\">Faire une réservation</span></a>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n<hr>\n<h2 align=\"center\">Avis Clients </h2>\n<br>\n<li class=\"list-group-item\" align=\"center\" *ngFor=\"let review of reviews;\">\n\n  <p><span style=\"color:blue;\">{{review.reviewcostumername}}</span> le <span\n    style=\"color: crimson\">{{review.reviewdate}}</span> : {{review.reviewcomment}}</p>\n  <p>Note : <span style=\"color: red\">{{review.reviewnote}}</span> /10</p>\n</li>\n<hr>\n</body>\n","import {Component, OnInit} from '@angular/core';\nimport {Guitar} from '../models/Guitar.model';\nimport {Subscription} from 'rxjs';\nimport {GuitarsService} from '../services/guitars.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-guitars',\n  templateUrl: './guitars.component.html',\n  styleUrls: ['./guitars.component.css']\n})\nexport class GuitarsComponent implements OnInit {\n\n  guitars: Guitar[] = [];\n  guitarSubscription: Subscription;\n\n  constructor(private guitarService: GuitarsService,\n              private router: Router) {\n    this.guitarSubscription = this.guitarService.guitarSubject.subscribe(\n      (guitars: Guitar[]) => {\n        this.guitars = guitars;\n      }\n    );\n    this.guitarService.emitGuitar();\n  }\n\n  ngOnInit(): void {\n    this.guitarService.getGuitars();\n  }\n\n  onViewGuitar(id: number) {\n    this.router.navigate(['guitars/', id]);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<h2 class=\"text-center\">LES GUITARES</h2>\n<hr>\n<div class=\"container\" align=\"center\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let guitar of guitars;let i = index;\">\n      <div class=\"col-md-8 pb-1 pb-md-0\" align=\"center\">\n        <div class=\"card\">\n          <img class=\"card-img-top\"  src=\"{{guitar.guitarimageurl}}\" alt=\"Card image cap\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ guitar.guitarbrand }} {{ guitar.guitarname }}</h5>\n            <p class=\"card-text\">{{guitar.guitardescription}}</p>\n            <button class=\"btn btn-primary\" (click)=\"onViewGuitar(guitar.guitarid)\">Détails</button>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n<hr>\n</body>\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from '../services/authentication.service';\r\nimport {GuitarsService} from '../services/guitars.service';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  session = null;\r\n  userpseudo: string;\r\n  isUserLoggedIn: boolean;\r\n  searchForm: FormGroup;\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private guitarService: GuitarsService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router) {\r\n\r\n    this.authenticationService.isUserLoggedIn.subscribe(value => {\r\n      this.isUserLoggedIn = value;\r\n    });\r\n    this.authenticationService.userPseudo.subscribe(value => {\r\n      this.userpseudo = value;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.session = sessionStorage.getItem('id');\r\n    this.userpseudo = sessionStorage.getItem('pseudo');\r\n    if (this.session == null) {\r\n      this.isUserLoggedIn = false;\r\n    } else {\r\n      this.isUserLoggedIn = true;\r\n    }\r\n    this.initForm();\r\n  }\r\n\r\n\r\n  initForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      searchbox: ''\r\n    });\r\n  }\r\n\r\n  search() {\r\n    const formValue = this.searchForm.value;\r\n    const searchbox = 'searchbox';\r\n    this.guitarService.searchGuitar(formValue[searchbox]);\r\n    this.router.navigate(['search']);\r\n  }\r\n\r\n  logOutUser() {\r\n    this.authenticationService.logOut();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" href=\"welcome\">OpenGuitarStore</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"guitars\">Guitares</a>\r\n        </li>\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link\" href=\"login\" *ngIf=\"isUserLoggedIn== false\">Se Connecter</a>\r\n        </li>\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link\" href=\"register\" *ngIf=\"isUserLoggedIn== false\">Créer un Compte</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"isUserLoggedIn==true\">\r\n          <a class=\"nav-link\" style=\"color: white\">| Bonjour {{userpseudo}} | </a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"isUserLoggedIn==true\">\r\n          <a class=\"nav-link\" href=\"accountmanagement\" style=\"color: grey\">Gérer mon Compte</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"isUserLoggedIn==true\">\r\n          <a class=\"nav-link\" href=\"welcome\" *ngIf=\"isUserLoggedIn== true\" (click)=\"logOutUser()\" style=\"color: red\">Se\r\n            Déconnecter </a>\r\n        </li>\r\n      </ul>\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\" class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Chercher une Guitare\" aria-label=\"Search\"\r\n               formControlName=\"searchbox\" required=\"required\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" [disabled]=\"searchForm.invalid\"\r\n                type=\"submit\">Rechercher\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import {Component, OnInit} from '@angular/core';\nimport {Guitar} from '../../models/Guitar.model';\nimport {Subscription} from 'rxjs';\nimport {GuitarsService} from '../../services/guitars.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  guitars: Guitar[] = [];\n  guitarSubscription: Subscription;\n\n  constructor(private guitarService: GuitarsService,\n              private router: Router) {\n    this.guitarSubscription = this.guitarService.guitarSubject.subscribe(\n      (guitars: Guitar[]) => {\n        this.guitars = guitars;\n      }\n    );\n    this.guitarService.emitGuitar();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onViewGuitar(id: number) {\n    this.router.navigate(['guitars/', id]);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<h2 class=\"text-center\">LES GUITARES</h2>\n<hr>\n<div class=\"container\" align=\"center\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let guitar of guitars;let i = index;\">\n      <div class=\"col-md-8 pb-1 pb-md-0\" align=\"center\">\n        <div class=\"card\">\n          <img class=\"card-img-top\" src=\"{{guitar.guitarimageurl}}\" a\n               lt=\"Card image cap\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{guitar.guitarbrand}} {{ guitar.guitarname }}</h5>\n            <p class=\"card-text\">{{guitar.guitardescription}}</p>\n            <button class=\"btn btn-primary\" (click)=\"onViewGuitar(guitar.guitarid)\">Détails</button>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n  <div *ngIf=\"guitars.length==0\">\n    <p style=\"color: red\">Pas de Guitares correspondant à ce nom</p>\n  </div>\n  <br>\n</div>\n<hr>\n</body>\n","import {Component,  OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n  signinForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.signinForm = this.formBuilder.group({\n      mail: '',\n      password: '',\n    });\n  }\n\n  authLog() {\n    const mail1 = 'mail';\n    const password1 = 'password';\n    const formValue = this.signinForm.value;\n    this.authenticationService.authentication(formValue[mail1], formValue[password1]);\n    this.router.navigate(['welcome']);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div class=\"nes-container is-centered\" align=\"center\">\n  <h2>Connectez vous</h2>\n  <form [formGroup]=\"signinForm\" (ngSubmit)=\"authLog()\">\n    <br/>\n    <p>Entrez vos Identifiants</p>\n    <label for=\"inputMail\" class=\"sr-only\">Adresse Mail</label>\n    <input type=\"text\" id=\"inputMail\" class=\"nes-textarea\" placeholder=\"Adresse Mail\" formControlName=\"mail\"\n           required autofocus>\n    <br/>\n    <label for=\"inputPassword\" class=\"sr-only\">Mot de passe</label>\n    <input type=\"password\" id=\"inputPassword\" class=\"nes-textarea\" placeholder=\"Mot de passe\"\n           formControlName=\"password\" required>\n    <br/>\n    <br/>\n    <button class=\"btn btn-success\" [disabled]=\"signinForm.invalid\"\n            type=\"submit\">Connexion\n    </button>\n  </form>\n</div>\n</body>\n</html>\n","export class Guitarmodel {\r\n\r\n  guitarmodelid: number;\r\n  guitaridguitar: string;\r\n\r\n  constructor(guitarmodelid: number,\r\n              guitaridguitar: string) {\r\n    this.guitarmodelid = guitarmodelid;\r\n    this.guitaridguitar = guitaridguitar;\r\n  }\r\n}\r\n","export class Review {\r\n  reviewdate: string;\r\n  reviewcomment: string;\r\n  reviewnote: number;\r\n  reviewcostumername: string;\r\n  guitaridguitar: number;\r\n  costumeridcostumer: number;\r\n\r\n\r\n  constructor(reviewdate: string,\r\n              reviewcomment: string,\r\n              reviewnote: number,\r\n              reviewcostumername: string,\r\n              guitaridguitar: number,\r\n              costumeridcostumer: number) {\r\n    this.reviewdate = reviewdate;\r\n    this.reviewcomment = reviewcomment;\r\n    this.reviewnote = reviewnote;\r\n    this.reviewcostumername = reviewcostumername;\r\n    this.guitaridguitar = guitaridguitar;\r\n    this.costumeridcostumer = costumeridcostumer;\r\n  }\r\n\r\n\r\n}\r\n","export class User {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  pseudo: string;\r\n  mail: string;\r\n  password: string;\r\n  newsletter: boolean;\r\n\r\n\r\n  constructor(id: number, name: string, surname: string, pseudo: string, mail: string, password: string, newsletter: boolean) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.surname = surname;\r\n    this.pseudo = pseudo;\r\n    this.mail = mail;\r\n    this.password = password;\r\n    this.newsletter = newsletter;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../../services/order.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-addorder',\n  templateUrl: './addorder.component.html',\n  styleUrls: ['./addorder.component.css']\n})\nexport class AddorderComponent implements OnInit {\n  guitarid: number;\n  userid: number;\n\n\n  constructor(private orderService: OrderService,\n              private router: Router) {\n    this.guitarid = Number(sessionStorage.getItem('guitarid'));\n    this.userid = Number(sessionStorage.getItem('id'));\n  }\n\n\n  ngOnInit(): void {\n    this.addNewOrder();\n  }\n\n  addNewOrder() {\n    this.orderService.addOrder(this.guitarid, this.userid);\n  }\n\n  deleteModel() {\n    this.orderService.modelDelete(this.guitarid);\n    this.router.navigate(['welcome']);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div align=\"center\">\n  <h3>Commande Effectuée</h3>\n  <br>\n  <br>\n  <button class=\"nav-link\" (click)=\"deleteModel()\">Continuer</button>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n  <br>\n</div>\n</body>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../../services/order.service';\nimport {Order} from '../../models/Order.model';\nimport {Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Guitarmodel} from '../../models/Guitarmodel.model';\n\n@Component({\n  selector: 'app-listorder',\n  templateUrl: './listorder.component.html',\n  styleUrls: ['./listorder.component.css']\n})\nexport class ListorderComponent implements OnInit {\n\n  orders: Order[];\n  // private orderUrl = 'http://localhost:9005/';\n  private orderUrl = 'http://localhost:9004/order/';\n  orderSubject = new Subject<any[]>();\n\n  constructor(private orderService: OrderService,\n              private http: HttpClient) {\n    const userid = Number(sessionStorage.getItem('id'));\n    this.http.get<Order[]>(this.orderUrl + '/orders/' + String(userid))\n      .subscribe(\n        (response) => {\n          this.orders = response;\n          this.emitOrder();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  emitOrder() {\n    this.orderSubject.next(this.orders.slice());\n  }\n\n  deleteOrderById(orderId: number, guitarid: number) {\n    const guitaridToStr = String(guitarid);\n    const newGuitarmodel = new Guitarmodel(\n      null,\n      guitaridToStr\n    );\n\n    this.orderService.deleteOrder(orderId);\n    this.orderService.addModel(newGuitarmodel);\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<br>\n<h2 class=\"text-center\">VOS COMMANDES</h2>\n<hr>\n<div class=\"container\" align=\"center\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let order of orders;let i = index;\">\n      <div class=\"col-md-8 pb-1 pb-md-0\" align=\"center\">\n        <div class=\"card\">\n          <img class=\"card-img-top\" src=\"{{order.guitarimageurl}}\" alt=\"Card image cap\">\n          <div class=\"card-body\">\n            <p>Commande numéro: {{i + 1}}</p>\n            <p>Nom du modèle : {{order.guitarneme}}</p>\n            <p>Commande effectuée le : <span style=\"color: blue\">{{ order.orderdate}} </span></p>\n            <p>Date estimée de reception : <span style=\"color: forestgreen\">{{ order.orderdeliverydate}}</span></p>\n            <a class=\"nav-link\" href=\"\" style=\"color: red\"\n               (click)=\"deleteOrderById(order.orderid, order.guitaridguitar)\">Supprimer ma\n              commande</a>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n  <div *ngIf=\"orders.length==0\">\n    <p style=\"color: red\">Vous n'avez pas de commandes actuellement</p>\n  </div>\n  <br>\n</div>\n<hr>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ReservationService} from '../../services/reservation.service';\n\n@Component({\n  selector: 'app-addreservation',\n  templateUrl: './addreservation.component.html',\n  styleUrls: ['./addreservation.component.css']\n})\nexport class AddreservationComponent implements OnInit {\n\n  guitarid: number;\n  userid: number;\n\n  constructor(private router: Router,\n              private reservationService: ReservationService) {\n    this.guitarid = Number(sessionStorage.getItem('guitarid'));\n    this.userid = Number(sessionStorage.getItem('id'));\n  }\n\n  ngOnInit(): void {\n    this.addNewReservation();\n  }\n\n\n  addNewReservation() {\n    this.reservationService.addReservation(this.guitarid, this.userid);\n    this.router.navigate(['welcome']);\n  }\n}\n","<p>addreservation works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Reservation} from '../../models/Reservation.model';\nimport {Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {ReservationService} from '../../services/reservation.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-listreservation',\n  templateUrl: './listreservation.component.html',\n  styleUrls: ['./listreservation.component.css']\n})\nexport class ListreservationComponent implements OnInit {\n\n  reservations: Reservation[];\n  // private reservationUrl = 'http://localhost:9008/';\n  private reservationUrl = 'http://localhost:9004/reservation/';\n  reservationSubject = new Subject<any[]>();\n\n  constructor(private reservationService: ReservationService,\n              private http: HttpClient, private router: Router) {\n    const userid = Number(sessionStorage.getItem('id'));\n    this.http.get<Reservation[]>(this.reservationUrl + '/reservations/' + String(userid))\n      .subscribe(\n        (response) => {\n          this.reservations = response;\n          this.emitReservation();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  emitReservation() {\n    this.reservationSubject.next(this.reservations.slice());\n  }\n\n  deleteReservationById(reservationid: number) {\n    this.reservationService.deleteReservation(reservationid);\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<br>\n<h2 class=\"text-center\">VOS RESERVATIONS</h2>\n<hr>\n<div class=\"container\" align=\"center\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let reservation of reservations;let i = index;\">\n      <div class=\"col-md-8 pb-1 pb-md-0\" align=\"center\">\n        <div class=\"card\" *ngIf=\"reservations.length>0\">\n          <img class=\"card-img-top\" src=\"{{reservation.guitarimageurl}}\" alt=\"Card image cap\">\n          <div class=\"card-body\">\n            <p>Réservation numéro: {{i + 1}}</p>\n            <p>Nom du modèle : {{reservation.guitarbrand}} {{reservation.guitarname}}</p>\n            <p>Date du nouveau stock : <span style=\"color: forestgreen\">{{ reservation.deliverydate}}</span></p>\n            <a class=\"nav-link\" href=\"\" style=\"color: red\" (click)=\"deleteReservationById(reservation.reservationid)\">Supprimer\n              ma\n              réservation</a>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n  <div *ngIf=\"reservations.length==0\">\n    <p style=\"color: red\">Vous n'avez pas de réservations actuellement</p>\n  </div>\n</div>\n<hr>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reservation',\n  templateUrl: './reservation.component.html',\n  styleUrls: ['./reservation.component.css']\n})\nexport class ReservationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reservation works!</p>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../models/User.model';\nimport {Router} from '@angular/router';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  // private userUrl = 'http://localhost:9003/';\n  private userUrl = 'http://localhost:9004/user/';\n\n  public userPseudo: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private http: HttpClient,\n              private router: Router) {\n  }\n\n  addUser(user: User) {\n    this.http\n      .post(this.userUrl + 'add/', user)\n      .subscribe(\n        () => {\n          console.log('Enregistrement terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  updateUser(userToModify: User) {\n    this.http\n      .put(this.userUrl + 'update/', userToModify)\n      .subscribe(\n        () => {\n          console.log('Maj terminée !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n    sessionStorage.removeItem(('id'));\n    sessionStorage.removeItem('mail');\n    sessionStorage.removeItem('pseudo');\n    this.router.navigate(['welcome']);\n  }\n\n  deleteUser() {\n    const id = sessionStorage.getItem('id');\n    this.http\n      .delete(this.userUrl + 'user/delete/' + id)\n      .subscribe(\n        () => {\n          console.log('Delete terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n\n  }\n\n  authentication(mail: string, password: string) {\n    return this.http.get(this.userUrl + 'get/' + mail + '/' + password)\n      .subscribe(\n        (user: User) => {\n          sessionStorage.setItem('id', String(user.id));\n          sessionStorage.setItem('mail', user.mail);\n          sessionStorage.setItem('pseudo', user.pseudo);\n\n          this.isUserLoggedIn.next(true);\n          const test = sessionStorage.getItem('pseudo');\n          this.userPseudo.next(test);\n        },\n        (error) => {\n          window.alert('mail ou mot de passe incorrecte');\n          this.router.navigate(['']);\n        }\n      );\n  }\n\n  logOut() {\n    sessionStorage.removeItem(('id'));\n    sessionStorage.removeItem('mail');\n    sessionStorage.removeItem('pseudo');\n    this.router.navigate(['welcome']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Guitar} from '../models/Guitar.model';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuitarsService {\n\n  public searchGuitars: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  guitars: Guitar[] = [];\n  private guitarUrl = 'http://localhost:9004/guitar';\n  // private guitarUrl = 'http://localhost:9002';\n  guitarSubject = new Subject<any[]>();\n\n  constructor(private http: HttpClient) {\n  }\n\n  emitGuitar() {\n    this.guitarSubject.next(this.guitars.slice());\n  }\n\n  getGuitars() {\n    this.http.get<Guitar[]>(this.guitarUrl + '/guitars')\n      .subscribe(\n        (response) => {\n          this.guitars = response;\n          this.emitGuitar();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  getOneGuitar(id: number) {\n    sessionStorage.setItem('guitarid', String(id));\n    return this.http.get(this.guitarUrl + '/guitars/' + id);\n  }\n\n  searchGuitar(str: string) {\n    this.http.get<Guitar[]>(this.guitarUrl + '/guitars/search/' + str)\n      .subscribe(\n        (response) => {\n          this.guitars = response;\n          this.emitGuitar();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n    this.searchGuitars.next(this.guitars);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Guitarmodel} from '../models/Guitarmodel.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n\n  // private orderUrl = 'http://localhost:9005/';\n  private orderUrl = 'http://localhost:9004/order/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  addOrder(guitarid: number, userid: number) {\n    this.http\n      .post(this.orderUrl + 'orders/add/' + String(guitarid) + '/' + String(userid), null)\n      .subscribe(\n        () => {\n          console.log('Enregistrement terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  modelDelete(guitarid: number) {\n    this.http\n      .delete(this.orderUrl + 'orders/modeldelete/' + String(guitarid))\n      .subscribe(\n        () => {\n          console.log('Delete terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  deleteOrder(orderid: number) {\n    this.http\n      .delete(this.orderUrl + 'orders/delete/' + String(orderid))\n      .subscribe(\n        () => {\n          console.log('Delete terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  addModel(guitarmodel: Guitarmodel) {\n    this.http\n      .post(this.orderUrl + 'orders/modeladd/', guitarmodel)\n      .subscribe(\n        () => {\n          console.log('Enregistrement terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  // private reservationUrl = 'http://localhost:9008/';\n\n  private reservationUrl = 'http://localhost:9004/reservation/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  addReservation(guitarid: number, userid: number) {\n    this.http\n      .post(this.reservationUrl + 'reservations/add/' + String(guitarid) + '/' + String(userid), null)\n      .subscribe(\n        () => {\n          console.log('Enregistrement terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  deleteReservation(reservationid: number) {\n    this.http\n      .delete(this.reservationUrl + 'reservations/delete/' + String(reservationid))\n      .subscribe(\n        () => {\n          console.log('Delete terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {Review} from '../models/Review.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n\n  // private reviewUrl = 'http://localhost:9007/';\n  private reviewUrl = 'http://localhost:9004/review/';\n // public guitarAverageMark: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  reviews: Review[] = [];\n  reviewSubject = new Subject<any[]>();\n  average: number;\n\n  constructor(private http: HttpClient) {\n  }\n\n  emitReview() {\n    this.reviewSubject.next(this.reviews.slice());\n  }\n\n  getReviewsByGuitarId(guitaridguitar: number) {\n    this.http.get<Review[]>(this.reviewUrl + 'reviews/' + guitaridguitar)\n      .subscribe(\n        (response) => {\n          this.reviews = response;\n          this.emitReview();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  addReview(review: Review) {\n    this.http\n      .post(this.reviewUrl + 'addreview/', review)\n      .subscribe(\n        () => {\n          console.log('Enregistrement terminé !');\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n/*  getReviewAv(guitarid: number) {\n    this.http.get<number>(this.reviewUrl + 'reviews/average/' + guitarid)\n      .subscribe(\n        (response) => {\n          this.average = response;\n          this.guitarAverageMark.next(this.average);\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }*/\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {User} from '../models/User.model';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  users: User[] = [];\r\n  private forumUrl = 'http://localhost:9003/findall';\r\n  userSubject = new Subject<any[]>();\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  emitUser() {\r\n    this.userSubject.next(this.users.slice());\r\n  }\r\n\r\n  getUser() {\r\n\r\n    this.http.get<User[]>(this.forumUrl)\r\n      .subscribe(\r\n        (response) => {\r\n          this.users = response;\r\n          this.emitUser();\r\n        },\r\n        (error) => {\r\n          console.log('Erreur ! : ' + error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {Router} from '@angular/router';\nimport {User} from '../../models/User.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  signupForm: FormGroup;\n  newsletterbool: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private router: Router) {\n    this.newsletterbool = false;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.signupForm = this.formBuilder.group({\n      name: '',\n      surname: '',\n      pseudo: '',\n      mail: '',\n      password: '',\n      newsletter: ''\n    });\n  }\n\n  saveUser() {\n    const formValue = this.signupForm.value;\n    const name = 'name';\n    const surname = 'surname';\n    const pseudo = 'pseudo';\n    const mail = 'mail';\n    const password = 'password';\n\n    const newUser = new User(\n      null,\n      formValue[name],\n      formValue[surname],\n      formValue[pseudo],\n      formValue[mail],\n      formValue[password],\n      this.newsletterbool);\n\n    this.authenticationService.addUser(newUser);\n    this.router.navigate(['/welcome']);\n  }\n}\n","<p>register works!</p>\n\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div class=\"row\">\n  <div class=\"col-lg-3\">\n  </div>\n  <div class=\"col-lg-6\">\n    <br/>\n    <br/>\n    <br/>\n    <div class=\"nes-container is-rounded\">\n      <h2 align=\"center\">Créer un compte</h2>\n      <br/>\n      <h3 align=\"center\">Vos Identifiants</h3>\n      <br/>\n      <br/>\n      <form [formGroup]=\"signupForm\" (ngSubmit)=\"saveUser()\">\n        <div class=\"form-group\" align=\"center\">\n\n            <label for=\"name\"></label>\n            <input type=\"text\"\n                   id=\"name\"\n                   class=\"nes-textarea\"\n                   formControlName=\"name\" placeholder=\"Entrez votre Nom\" required=\"required\">\n          <br/>\n            <label for=\"surname\"></label>\n            <input type=\"text\"\n                   id=\"surname\"\n                   class=\"nes-textarea\"\n                   formControlName=\"surname\" placeholder=\"Entrez votre Prénom\" required=\"required\">\n          <br/>\n            <label for=\"pseudo\"></label>\n            <input type=\"text\"\n                   id=\"pseudo\"\n                   class=\"nes-textarea\"\n                   formControlName=\"pseudo\" placeholder=\"Entrez votre Pseudo\" required=\"required\">\n          <br/>\n            <label for=\"mail\"></label>\n            <input type=\"text\"\n                   id=\"mail\"\n                   class=\"nes-textarea\"\n                   formControlName=\"mail\" placeholder=\"Entrez votre Email\" required=\"required\">\n          <br/>\n            <label for=\"password\"></label>\n            <input type=\"password\"\n                   id=\"password\"\n                   class=\"nes-textarea\"\n                   formControlName=\"password\" placeholder=\"Entrez votre Password\" required=\"required\">\n          <br/>\n          <br/>\n            <input type=\"checkbox\" id=\"newsletter\" name=\"newsletter\" formControlName=\"newsletter\" [(ngModel)]=\"newsletterbool\">\n            <label for=\"newsletter\">Abonnement Newsletter</label>\n\n          <br/>\n          <br/>\n            <button class=\"btn btn-success\"\n                    type=\"submit\"\n                    [disabled]=\"signupForm.invalid\">Créer mon compte\n            </button>\n          <br/>\n          <br/>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-lg-3\">\n  </div>\n</div>\n<br/>\n<br/>\n<br/>\n</body>\n</html>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from '../services/user.service';\r\nimport {User} from '../models/User.model';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  users: User[] = [];\r\n  userSubscription: Subscription;\r\n\r\n  constructor(private userService: UserService) {\r\n    this.userSubscription = this.userService.userSubject.subscribe(\r\n      (users: User[]) => {\r\n        this.users = users;\r\n      }\r\n    );\r\n    this.userService.emitUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUser();\r\n  }\r\n\r\n  onFetch() {\r\n    this.userService.getUser();\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../services/order.service';\nimport {Guitar} from '../models/Guitar.model';\nimport {HttpClient} from '@angular/common/http';\nimport {Subject} from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  guitars: Guitar[] = [];\n  guitarSubject = new Subject<any[]>();\n\n  // private welcomeUrl = 'http://localhost:9005';\n  private welcomeUrl = 'http://localhost:9004/order';\n  constructor(private http: HttpClient,\n              private router: Router) {\n\n    this.http.get<Guitar[]>(this.welcomeUrl + '/welcomeorder')\n      .subscribe(\n        (response) => {\n          this.guitars = response;\n          this.emitGuitar();\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  emitGuitar() {\n    this.guitarSubject.next(this.guitars.slice());\n  }\n\n  onViewGuitar(id: number) {\n    this.router.navigate(['guitars/', id]);\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap eCommerce Page Template</title>\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n</head>\n<body>\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div id=\"carouselExampleControls\">\n        <div class=\"carousel-inner\">\n          <div class=\"carousel-item active\">\n            <img class=\"d-block w-100\" src=\"assets/images/welcome.jpg\" alt=\"First slide\">\n            <div class=\"carousel-caption d-none d-md-block\">\n              <!--   <h5>Item 1 Heading</h5>\n                 <p>Item 1 Description</p>-->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <hr>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <div class=\"row\">\n        <div class=\"col-2\"><img class=\"rounded-circle\" alt=\"Free Shipping\" src=\"assets/images/welcome1.png\"></div>\n        <div class=\"col-lg-6 col-10 ml-1\">\n          <h4>Livraison Rapide</h4>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"row\">\n        <div class=\"col-2\"><img class=\"rounded-circle\" alt=\"Free Shipping\" src=\"assets/images/welcome2.jpg\"></div>\n        <div class=\"col-lg-6 col-10 ml-1\">\n          <h4>Retour Gratuit</h4>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"row\">\n        <div class=\"col-2\"><img class=\"rounded-circle\" alt=\"Free Shipping\" src=\"assets/images/welcome3.jpg\"></div>\n        <div class=\"col-lg-6 col-10 ml-1\">\n          <h4>Promotions</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<hr>\n<h2 class=\"text-center\">MEILLEURES OFFRES</h2>\n<hr>\n<div class=\"container\">\n  <div class=\"row text-center\">\n    <div class=\"col-md-4 pb-1 pb-md-0\">\n      <div class=\"card\">\n        <img class=\"card-img-top\" src=\"{{guitars[0].guitarimageurl}}\" alt=\"Card image cap\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{guitars[0].guitarbrand}} {{guitars[0].guitarname}}</h5>\n          <p class=\"card-text\">{{guitars[0].guitardescription}}</p>\n          <button class=\"btn btn-primary\" (click)=\"onViewGuitar(guitars[0].guitarid)\">Détails</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-4 pb-1 pb-md-0\">\n      <div class=\"card\">\n        <img class=\"card-img-top\" src=\"{{guitars[1].guitarimageurl}}\" alt=\"Card image cap\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{guitars[1].guitarbrand}} {{guitars[1].guitarname}}</h5>\n          <p class=\"card-text\">{{guitars[1].guitardescription}}</p>\n          <button class=\"btn btn-primary\" (click)=\"onViewGuitar(guitars[1].guitarid)\">Détails</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-4 pb-1 pb-md-0\">\n      <div class=\"card\">\n        <img class=\"card-img-top\" src=\"{{guitars[2].guitarimageurl}}\" alt=\"Card image cap\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{guitars[2].guitarbrand}}  {{guitars[2].guitarname}}</h5>\n          <p class=\"card-text\">{{guitars[2].guitardescription}}</p>\n          <button class=\"btn btn-primary\" (click)=\"onViewGuitar(guitars[2].guitarid)\">Détails</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<hr>\n</body>\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}